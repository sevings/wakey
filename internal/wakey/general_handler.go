package wakey

import (
	"fmt"
	"net/url"

	"go.uber.org/zap"
	tele "gopkg.in/telebot.v3"
)

type GeneralHandler struct {
	db   *DB
	log  *zap.SugaredLogger
	name string
}

func NewGeneralHandler(db *DB, log *zap.SugaredLogger, botName string) *GeneralHandler {
	return &GeneralHandler{
		db:   db,
		log:  log,
		name: botName,
	}
}

func (gh *GeneralHandler) Actions() []string {
	return []string{btnDoNothing, btnInviteFriends, btnShowLink}
}

func (gh *GeneralHandler) HandleAction(c tele.Context, action string) error {
	inviteLink := "https://t.me/" + gh.name
	switch action {
	case btnInviteFriends:
		message := "–ü—Ä–∏–≥–ª–∞—Å–∏—Ç–µ –¥—Ä—É–∑–µ–π –ø—Ä–∏—Å–æ–µ–¥–∏–Ω–∏—Ç—å—Å—è –∫ –Ω–∞—à–µ–º—É –±–æ—Ç—É! –í—ã–±–µ—Ä–∏—Ç–µ —Å–ø–æ—Å–æ–±:"

		inlineKeyboard := &tele.ReplyMarkup{}
		btnShowLink := inlineKeyboard.Data("–ü–æ–∫–∞–∑–∞—Ç—å —Å—Å—ã–ª–∫—É", btnShowLink)
		btnShareLink := inlineKeyboard.URL("–ü–æ–¥–µ–ª–∏—Ç—å—Å—è", createShareLink(inviteLink))

		inlineKeyboard.Inline(
			inlineKeyboard.Row(btnShowLink),
			inlineKeyboard.Row(btnShareLink),
		)

		return c.Edit(message, inlineKeyboard)
	case btnShowLink:
		message := fmt.Sprintf("–í–æ—Ç —Å—Å—ã–ª–∫–∞ –¥–ª—è –ø—Ä–∏–≥–ª–∞—à–µ–Ω–∏—è –¥—Ä—É–∑–µ–π:\n\n%s\n\n–ü—Ä–æ—Å—Ç–æ —Å–∫–æ–ø–∏—Ä—É–π—Ç–µ –∏ –æ—Ç–ø—Ä–∞–≤—å—Ç–µ –µ—ë –≤–∞—à–∏–º –¥—Ä—É–∑—å—è–º!", inviteLink)
		return c.Edit(message)
	case btnDoNothing:
		return c.Edit("–•–æ—Ä–æ—à–æ, –¥–æ —Å–≤–∏–¥–∞–Ω–∏—è! –ï—Å–ª–∏ –≤–∞–º —á—Ç–æ-—Ç–æ –ø–æ–Ω–∞–¥–æ–±–∏—Ç—Å—è, –ø—Ä–æ—Å—Ç–æ –Ω–∞–ø–∏—à–∏—Ç–µ –º–Ω–µ.")
	default:
		gh.log.Errorw("unexpected action for GeneralHandler", "action", action)
		return c.Edit("–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–æ–µ –¥–µ–π—Å—Ç–≤–∏–µ. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–æ–ø—Ä–æ–±—É–π—Ç–µ –µ—â–µ —Ä–∞–∑.")
	}
}

func (gh *GeneralHandler) States() []UserState {
	return []UserState{StateSuggestActions}
}

func (gh *GeneralHandler) HandleState(c tele.Context, state UserState) error {
	switch state {
	case StateSuggestActions:
		return gh.suggestActions(c)
	default:
		gh.log.Errorw("unexpected state for GeneralHandler", "state", state)
		return c.Edit("–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–æ–µ –¥–µ–π—Å—Ç–≤–∏–µ. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–æ–ø—Ä–æ–±—É–π—Ç–µ –µ—â–µ —Ä–∞–∑.")
	}
}

func createShareLink(botLink string) string {
	sellingText := `–ü—Ä–∏—Å–æ–µ–¥–∏–Ω—è–π—Ç–µ—Å—å –∫ –Ω–∞—à–µ–º—É –±–æ—Ç—É –¥–ª—è –ø–ª–∞–Ω–∏—Ä–æ–≤–∞–Ω–∏—è –∏ —É–ª—É—á—à–µ–Ω–∏—è –ø—Ä–æ–¥—É–∫—Ç–∏–≤–Ω–æ—Å—Ç–∏!

üåü –ß—Ç–æ —É–º–µ–µ—Ç –Ω–∞—à –±–æ—Ç:
‚Ä¢ –ü–æ–º–æ–≥–∞–µ—Ç –ø–ª–∞–Ω–∏—Ä–æ–≤–∞—Ç—å –≤–∞—à –¥–µ–Ω—å
‚Ä¢ –ù–∞–ø–æ–º–∏–Ω–∞–µ—Ç –æ–±–Ω–æ–≤–ª—è—Ç—å –ø–ª–∞–Ω—ã –∫–∞–∂–¥—ã–π –≤–µ—á–µ—Ä
‚Ä¢ –ü–æ–∑–≤–æ–ª—è–µ—Ç –æ–±–º–µ–Ω–∏–≤–∞—Ç—å—Å—è –≤–¥–æ—Ö–Ω–æ–≤–ª—è—é—â–∏–º–∏ –ø–æ–∂–µ–ª–∞–Ω–∏—è–º–∏ —Å –¥—Ä—É–≥–∏–º–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è–º–∏
‚Ä¢ –î–æ—Å—Ç–∞–≤–ª—è–µ—Ç –º–æ—Ç–∏–≤–∏—Ä—É—é—â–∏–µ —Å–æ–æ–±—â–µ–Ω–∏—è –∫ –º–æ–º–µ–Ω—Ç—É –≤–∞—à–µ–≥–æ –ø—Ä–æ–±—É–∂–¥–µ–Ω–∏—è

üí™ –ü–æ–≤—ã—Å—å—Ç–µ —Å–≤–æ—é –ø—Ä–æ–¥—É–∫—Ç–∏–≤–Ω–æ—Å—Ç—å, –ø–æ–ª—É—á–∞–π—Ç–µ –ø–æ–¥–¥–µ—Ä–∂–∫—É –∏ –≤–¥–æ—Ö–Ω–æ–≤–µ–Ω–∏–µ –∫–∞–∂–¥—ã–π –¥–µ–Ω—å!`

	encodedText := url.QueryEscape(sellingText + "\n\n" + botLink)
	return "https://t.me/share/url?url=" + encodedText
}

func (gh *GeneralHandler) suggestActions(c tele.Context) error {
	inlineKeyboard := &tele.ReplyMarkup{}

	btnShowProfile := inlineKeyboard.Data("–ü–æ–∫–∞–∑–∞—Ç—å –º–æ–π –ø—Ä–æ—Ñ–∏–ª—å", btnShowProfile)
	btnChangeName := inlineKeyboard.Data("–ò–∑–º–µ–Ω–∏—Ç—å –∏–º—è", btnChangeName)
	btnChangeBio := inlineKeyboard.Data("–ò–∑–º–µ–Ω–∏—Ç—å –±–∏–æ", btnChangeBio)
	btnChangeTimezone := inlineKeyboard.Data("–ò–∑–º–µ–Ω–∏—Ç—å —á–∞—Å–æ–≤–æ–π –ø–æ—è—Å", btnChangeTimezone)
	btnChangePlans := inlineKeyboard.Data("–ò–∑–º–µ–Ω–∏—Ç—å –ø–ª–∞–Ω—ã –Ω–∞ –∑–∞–≤—Ç—Ä–∞", btnChangePlans)
	btnChangeWakeTime := inlineKeyboard.Data("–ò–∑–º–µ–Ω–∏—Ç—å –≤—Ä–µ–º—è –ø—Ä–æ–±—É–∂–¥–µ–Ω–∏—è", btnChangeWakeTime)
	btnChangeNotifyTime := inlineKeyboard.Data("–ò–∑–º–µ–Ω–∏—Ç—å –≤—Ä–µ–º—è —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è", btnChangeNotifyTime)
	btnSendWish := inlineKeyboard.Data("–û—Ç–ø—Ä–∞–≤–∏—Ç—å –ø–æ–∂–µ–ª–∞–Ω–∏–µ", btnSendWishYes)
	btnInviteFriends := inlineKeyboard.Data("–ü—Ä–∏–≥–ª–∞—Å–∏—Ç—å –¥—Ä—É–∑–µ–π", btnInviteFriends)
	btnDoNothing := inlineKeyboard.Data("–ù–∏—á–µ–≥–æ, –¥–æ —Å–≤–∏–¥–∞–Ω–∏—è", btnDoNothing)

	inlineKeyboard.Inline(
		inlineKeyboard.Row(btnShowProfile),
		inlineKeyboard.Row(btnChangeName),
		inlineKeyboard.Row(btnChangeBio),
		inlineKeyboard.Row(btnChangeTimezone),
		inlineKeyboard.Row(btnChangePlans),
		inlineKeyboard.Row(btnChangeWakeTime),
		inlineKeyboard.Row(btnChangeNotifyTime),
		inlineKeyboard.Row(btnSendWish),
		inlineKeyboard.Row(btnInviteFriends),
		inlineKeyboard.Row(btnDoNothing),
	)

	return c.Send("–ß—Ç–æ –±—ã –≤—ã —Ö–æ—Ç–µ–ª–∏ —Å–¥–µ–ª–∞—Ç—å?", inlineKeyboard)
}
